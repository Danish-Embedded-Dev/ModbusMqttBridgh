[{"id":"c1dc83f40b640ec3","type":"tab","label":"modbus_UI","disabled":false,"info":"","env":[]},{"id":"328c986cf4c7574c","type":"comment","z":"c1dc83f40b640ec3","name":"modbus_config","info":"","x":340,"y":160,"wires":[]},{"id":"9e757b019a8cfb18","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8N1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":0}","payloadType":"str","x":350,"y":200,"wires":[["b8d0666702f42c4a"]]},{"id":"7ef5d65e5a4585bf","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8N2","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":32}","payloadType":"str","x":350,"y":240,"wires":[["b8d0666702f42c4a"]]},{"id":"a69d56a1fd65183e","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8E1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":10}","payloadType":"str","x":350,"y":280,"wires":[["b8d0666702f42c4a"]]},{"id":"4185b8b7816604b5","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8E2","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":42}","payloadType":"str","x":350,"y":320,"wires":[["b8d0666702f42c4a"]]},{"id":"be3b5055eb46295a","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8O1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":11}","payloadType":"str","x":350,"y":360,"wires":[["b8d0666702f42c4a"]]},{"id":"4bcd34bba2895c8b","type":"inject","z":"c1dc83f40b640ec3","name":"SERIAL_8O2","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Serial\":43}","payloadType":"str","x":350,"y":400,"wires":[["b8d0666702f42c4a"]]},{"id":"b62af0f2d1fce8f9","type":"inject","z":"c1dc83f40b640ec3","name":"4800","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":4800}","payloadType":"str","x":530,"y":200,"wires":[["b8d0666702f42c4a"]]},{"id":"d27215d23a8271e4","type":"inject","z":"c1dc83f40b640ec3","name":"9600","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":9600}","payloadType":"str","x":530,"y":240,"wires":[["b8d0666702f42c4a"]]},{"id":"2f81bdc22286ebbb","type":"inject","z":"c1dc83f40b640ec3","name":"19200","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":19200}","payloadType":"str","x":530,"y":280,"wires":[["b8d0666702f42c4a"]]},{"id":"d2026ca7d5ec89d9","type":"inject","z":"c1dc83f40b640ec3","name":"38400","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":38400}","payloadType":"str","x":530,"y":320,"wires":[["b8d0666702f42c4a"]]},{"id":"7e2f476cb18a1d60","type":"inject","z":"c1dc83f40b640ec3","name":"57600","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":57600}","payloadType":"str","x":530,"y":360,"wires":[["b8d0666702f42c4a"]]},{"id":"3c56f2c1e4a1089e","type":"inject","z":"c1dc83f40b640ec3","name":"115200","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"Mod_baudrate\":115200}","payloadType":"str","x":530,"y":400,"wires":[["b8d0666702f42c4a"]]},{"id":"b8d0666702f42c4a","type":"mqtt out","z":"c1dc83f40b640ec3","name":"","topic":"VECTRA_MODBUS_DEV","qos":"0","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"bb94b28.a7c075","x":750,"y":160,"wires":[]},{"id":"e5e9f02b450bb2a8","type":"comment","z":"c1dc83f40b640ec3","name":"modbus_packet","info":"","x":340,"y":440,"wires":[]},{"id":"5e7e2d642288de4e","type":"mqtt in","z":"c1dc83f40b640ec3","name":"","topic":"VECTRA_MODBUS","qos":"2","datatype":"auto","broker":"bb94b28.a7c075","nl":false,"rap":true,"rh":0,"inputs":0,"x":970,"y":160,"wires":[["a5fe67e780b12ee7"]]},{"id":"a5fe67e780b12ee7","type":"debug","z":"c1dc83f40b640ec3","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1190,"y":160,"wires":[]},{"id":"1194a28a.49d0ad","type":"buffer-parser","z":"c1dc83f40b640ec3","name":"","data":"payload","dataType":"msg","specification":"{\"options\":{\"byteSwap\":[\"swap16\"],\"resultType\":\"value\",\"singleResult\":false,\"msgProperty\":\"payload\"},\"items\":[{\"name\":\"plc1/production/alphabet\",\"type\":\"string\",\"offset\":0,\"length\":26},{\"name\":\"plc1/production/status/count\",\"type\":\"int\",\"offset\":25},{\"name\":\"plc1/production/status/sequence\",\"type\":\"bcd\",\"offset\":4},{\"name\":\"plc1/machine/status/runner/temperature\",\"type\":\"int16le\",\"offset\":26},{\"name\":\"plc1/machine/status/runner/speed\",\"type\":\"int16be\",\"offset\":26},{\"name\":\"plc1/machine/status/running\",\"type\":\"bool\",\"offset\":0,\"offsetbit\":0},{\"name\":\"plc1/machine/status/warning\",\"type\":\"bool\",\"offset\":0,\"offsetbit\":1},{\"name\":\"plc1/machine/status/fault\",\"type\":\"bool\",\"offset\":0,\"offsetbit\":2}]}","specificationType":"ui","items":[{"type":"string","name":"plc1/production/alphabet","offset":0,"length":26,"offsetbit":0,"scale":"1","mask":""},{"type":"int8","name":"plc1/production/status/count","offset":25,"length":1,"offsetbit":0,"scale":"1","mask":""},{"type":"bcd","name":"plc1/production/status/sequence","offset":4,"length":1,"offsetbit":0,"scale":"1","mask":""},{"type":"int16le","name":"plc1/machine/status/runner/temperature","offset":26,"length":1,"offsetbit":0,"scale":"1","mask":""},{"type":"int16le","name":"plc1/machine/status/runner/speed","offset":25,"length":6,"offsetbit":0,"scale":"1","mask":""},{"type":"bool","name":"plc1/machine/status/running","offset":0,"length":1,"offsetbit":0,"scale":"1","mask":""},{"type":"bool","name":"plc1/machine/status/warning","offset":0,"length":1,"offsetbit":1,"scale":"1","mask":""},{"type":"bool","name":"plc1/machine/status/fault","offset":0,"length":1,"offsetbit":2,"scale":"1","mask":""}],"swap1":"","swap2":"","swap3":"","swap1Type":"swap","swap2Type":"swap","swap3Type":"swap","msgProperty":"payload","msgPropertyType":"","resultType":"value","resultTypeType":"","multipleResult":true,"fanOutMultipleResult":false,"setTopic":true,"outputs":1,"x":490,"y":760,"wires":[["858b1ecf.77b58"]]},{"id":"858b1ecf.77b58","type":"debug","z":"c1dc83f40b640ec3","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":730,"y":760,"wires":[]},{"id":"c22cd2e8.52649","type":"inject","z":"c1dc83f40b640ec3","name":"Fake PLC data 16bit Array ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{12,52,32,35,12}","payloadType":"json","x":270,"y":760,"wires":[["1194a28a.49d0ad"]]},{"id":"970db39d.106a6","type":"comment","z":"c1dc83f40b640ec3","name":"take a array of 16bit values, byte reverse, split out several values and transmit individual messages with topic + payload","info":"","x":540,"y":720,"wires":[]},{"id":"1523dd03.6332f3","type":"buffer-parser","z":"c1dc83f40b640ec3","name":"","data":"payload","dataType":"msg","specification":"spec","specificationType":"ui","items":[{"type":"string","name":"alphabet","offset":0,"length":26,"offsetbit":0,"scale":"1","mask":""},{"type":"int8","name":"single byte pos 4","offset":4,"length":1,"offsetbit":0,"scale":"1","mask":""},{"type":"bcd","name":"bcd equiv","offset":4,"length":5,"offsetbit":0,"scale":"1","mask":""},{"type":"int16le","name":"Array[6] of int16le","offset":26,"length":6,"offsetbit":0,"scale":"1","mask":""},{"type":"int16be","name":"Array[6] of int16be","offset":26,"length":6,"offsetbit":0,"scale":"1","mask":""},{"type":"bool","name":"32 bools","offset":0,"length":32,"offsetbit":0,"scale":"1","mask":""},{"type":"16bitbe","name":"Array[4] of 16bits","offset":0,"length":4,"offsetbit":0,"scale":"1","mask":""}],"swap1":"","swap2":"","swap3":"","swap1Type":"swap","swap2Type":"swap","swap3Type":"swap","msgProperty":"","msgPropertyType":"","resultType":"keyvalue","resultTypeType":"","multipleResult":false,"fanOutMultipleResult":false,"setTopic":false,"outputs":1,"x":490,"y":860,"wires":[["a3051c67.b82ad"]]},{"id":"a3051c67.b82ad","type":"debug","z":"c1dc83f40b640ec3","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"data","targetType":"msg","x":720,"y":860,"wires":[]},{"id":"9b72f1f5.1aacc","type":"inject","z":"c1dc83f40b640ec3","name":"Fake PLC data 16bit Array","props":[{"p":"payload","v":"[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]","vt":"json"},{"p":"topic","v":"","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[25185,25699,26213,26727,27241,27755,28013,28783,29297,29811,30325,30839,31353,256,512,768,1024,1280,1536,1792,2048,2304,2560,2816,3072,3597]","payloadType":"json","x":270,"y":860,"wires":[["1523dd03.6332f3"]]},{"id":"a9a2dd4c.118f9","type":"comment","z":"c1dc83f40b640ec3","name":"take a array of 16bit values, byte reverse, split out several values and transmit one message with named objects in msg.data","info":"","x":560,"y":820,"wires":[]},{"id":"b25967db45d9507a","type":"comment","z":"c1dc83f40b640ec3","name":"red:https://flows.nodered.org/node/node-red-contrib-buffer-parser","info":"","x":370,"y":920,"wires":[]},{"id":"9b4fc0b5c3019638","type":"inject","z":"c1dc83f40b640ec3","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[1,5,0,0,255,0]","payloadType":"bin","x":370,"y":480,"wires":[["b8d0666702f42c4a"]]},{"id":"2fbe5a11cece4753","type":"function","z":"c1dc83f40b640ec3","name":"CRC16-modbus","func":"var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                window.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":500,"wires":[["b8d0666702f42c4a"]]},{"id":"d967d0da5fdb4e99","type":"inject","z":"c1dc83f40b640ec3","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"01050000FF00","payloadType":"str","x":740,"y":500,"wires":[["2fbe5a11cece4753"]]},{"id":"d2400cb5c4d02f6e","type":"inject","z":"c1dc83f40b640ec3","name":"SendData_In_byte_testing","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[1,4,0,0,0,8,241,204]","payloadType":"bin","x":770,"y":400,"wires":[["b8d0666702f42c4a"]]},{"id":"090c2db329a224c5","type":"comment","z":"c1dc83f40b640ec3","name":"for_byte_to_byte_bridge","info":"","x":770,"y":360,"wires":[]},{"id":"5b79f8e127eead93","type":"comment","z":"c1dc83f40b640ec3","name":"UI_based_custum_packet_made_Work_in_progress","info":"","x":810,"y":460,"wires":[]},{"id":"89e62a9ba83bf035","type":"debug","z":"c1dc83f40b640ec3","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":790,"y":980,"wires":[]},{"id":"887a6a345e972605","type":"function","z":"c1dc83f40b640ec3","name":"CRC16-modbus","func":"var CRCMaster = {\n    StringToCheck: \"\",\n    CleanedString: \"\",\n    CRCTableDNP: [],\n    init: function() {\n        this.CRCDNPInit();\n    },\n    CleanString: function(inputType) {\n        if (inputType == \"ASCII\") {\n            this.CleanedString = this.StringToCheck;\n        } else {\n            if (this.StringToCheck.match(/^[0-9A-F \\t]+$/gi) !== null) {\n                this.CleanedString = this._hexStringToString(this.StringToCheck.toUpperCase().replace(/[\\t ]/g, ''));\n            } else {\n                window.alert(\"String doesn't seem to be a valid Hex input.\");\n                return false;\n            }\n        }\n        return true;\n    },\n    CRCDNPInit: function() {\n        var i, j, crc, c;\n        for (i = 0; i < 256; i++) {\n            crc = 0;\n            c = i;\n            for (j = 0; j < 8; j++) {\n                if ((crc ^ c) & 0x0001) crc = (crc >> 1) ^ 0xA6BC;\n                else crc = crc >> 1;\n                c = c >> 1;\n            }\n            this.CRCTableDNP[i] = crc;\n        }\n    },\n    CRC16Modbus: function() {\n        var crc = 0xFFFF;\n        var str = this.CleanedString;\n        for (var pos = 0; pos < str.length; pos++) {\n            crc ^= str.charCodeAt(pos);\n            for (var i = 8; i !== 0; i--) {\n                if ((crc & 0x0001) !== 0) {\n                    crc >>= 1;\n                    crc ^= 0xA001;\n                } else\n                    crc >>= 1;\n            }\n        }\n        return crc;\n    },\n    _stringToBytes: function(str) {\n        var ch, st, re = [];\n        for (var i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i); // get char\n            st = []; // set up \"stack\"\n            do {\n                st.push(ch & 0xFF); // push byte to stack\n                ch = ch >> 8; // shift value down by 1 byte\n            }\n            while (ch);\n            // add stack contents to result\n            // done because chars have \"wrong\" endianness\n            re = re.concat(st.reverse());\n        }\n        // return an array of bytes\n        return re;\n    },\n    _hexStringToString: function(inputstr) {\n        var hex = inputstr.toString(); //force conversion\n        var str = '';\n        for (var i = 0; i < hex.length; i += 2)\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        return str;\n    },\n    Calculate: function(str, inputType) {\n        this.StringToCheck = str;\n        if (this.CleanString(inputType)) {\n            crcinputcrc16modbus=this.CRC16Modbus().toString(16).toUpperCase();\n            crcinputcrc16modbus=crcinputcrc16modbus.substr(2) + crcinputcrc16modbus.substr(0, 2); //swap bytes\n   \n        }\n    }\n};\n\nCRCMaster.init();\n\nvar inputType = \"HEX\";\nvar crcinputcrc16modbus;\nvar crcinput = msg.payload;\n\nCRCMaster.Calculate(crcinput, inputType);\n\nmsg.payload = crcinput + crcinputcrc16modbus;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":980,"wires":[["897c0386426fcd97"]]},{"id":"ac6977e04162ba18","type":"inject","z":"c1dc83f40b640ec3","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"010400000008","payloadType":"str","x":240,"y":980,"wires":[["887a6a345e972605"]]},{"id":"897c0386426fcd97","type":"function","z":"c1dc83f40b640ec3","name":"","func":"var str = msg.payload;\nif( (str.length % 2) !== 0){\n  node.error(\"String length must be Even\");\n  return;\n}\n\nvar numbers = []\nfor(var i = 0; i < str.length; i+=2){\n  var num = str.slice(i,i+2)\n  numbers.push(parseInt(num,16))\n}\n\nfunction doXOR(total, num, idx) {\n  return total ^ num;\n}\n\nvar result = numbers.reduce(doXOR)\nmsg.payload = result;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":980,"wires":[["89e62a9ba83bf035"]]},{"id":"bc1d65a47898a156","type":"comment","z":"c1dc83f40b640ec3","name":"Latest_customize_Modbus_packet_generator","info":"","x":790,"y":560,"wires":[]},{"id":"ccaff516af04b914","type":"function","z":"c1dc83f40b640ec3","name":" modbus Packet","func":"var DeviceAddr   = 1;\nvar FunctionCode = 4;\nvar AddrHi       = 0;\nvar AddrLo       = 0;\nvar RegHi        = 0;\nvar RegLo        = 8;\nmsg.payload = Buffer.from([DeviceAddr,FunctionCode,AddrHi,AddrLo,RegHi,RegLo]);\n\nfunction crc16(buffer) { \n    var crc = 0xFFFF;\n    var odd;\n\n    for (var i = 0; i < buffer.length; i++) {\n        crc = crc ^ buffer[i];\n\n        for (var j = 0; j < 8; j++) {\n            odd = crc & 0x0001;\n            crc = crc >> 1;\n            if (odd) {\n                crc = crc ^ 0xA001;\n            }\n        }\n    }\nvar buf1 = Buffer.alloc(buffer.length+2); //2 extra for crc bytes\n\nfor (var i = 0; i <= buffer.length; i++) {\n    buf1[i]=buffer[i];\n}\nbuf1[buffer.length]     =   crc&0x00FF;\nbuf1[buffer.length + 1] =   (crc&0xFF00)>>8;\n// var buf = Buffer.from([ buffer[0], buffer[1], buffer[2], buffer[3], buffer[4],buffer[5] , crc&0x00FF ,(crc&0xFF00)>>8]);\n\nreturn buf1 ;\n}\n\nmsg.payload = crc16(msg.payload); \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":620,"wires":[["b8d0666702f42c4a"]]},{"id":"6fe84146203fde5d","type":"inject","z":"c1dc83f40b640ec3","name":"Trigger","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":720,"y":620,"wires":[["ccaff516af04b914"]]},{"id":"bb94b28.a7c075","type":"mqtt-broker","name":"","broker":"192.168.120.164","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""}]
